#include "channel.chp"

inline process wchb(a4pe1of2 R, a4pe1of2 L)
{
	*[
		[	R.e & L.r.t -> R.r.t+; 
		[]	R.e & L.r.f -> R.r.f+;
		]; L.e-; [~R.e & ~L.r.t & ~L.r.f]; (R.r.t- || R.r.f-); L.e+
	]
}
{
	*[[R.r.t | R.r.f]; R.e-; [~R.r.t & ~R.r.f]; R.e+] ||
	*[[ 1 -> L.r.t+
	  []1 -> L.r.f+
	  ]; [~L.e]; (L.r.t-||L.r.f-); [L.e]
	 ]
}

inline process pchb(a4pe1of2 R, a4pe1of2 L)
{
	*[
		[	R.e & L.r.t -> R.r.t+ 
		[]	R.e & L.r.f -> R.r.f+
		]; L.e-; [~R.e]; (R.r.t- || R.r.f-); [~L.r.t & ~L.r.f]; L.e+
	]
}
{
	*[[R.r.t | R.r.f]; R.e-; [~R.r.t & ~R.r.f]; R.e+] ||
	*[[ 1 -> L.r.t+
	  []1 -> L.r.f+
	  ]; [~L.e]; (L.r.t-||L.r.f-); [L.e]
	 ]
}

inline process pcfb(a4pe1of2 R, a4pe1of2 L)
{
	node<1> en := 1;
	*[
		[	R.e & L.r.t -> R.r.t+ 
		[]	R.e & L.r.f -> R.r.f+
		]; L.e-; en-;
		(
			([~R.e]; (R.r.t- || R.r.f-)) || 
			([~L.r.t & ~L.r.f]; L.e+)
		); en+ 
	]
}
{
	*[[R.r.t | R.r.f]; R.e-; [~R.r.t & ~R.r.f]; R.e+] ||
	*[[ 1 -> L.r.t+
	  []1 -> L.r.f+
	  ]; [~L.e]; (L.r.t-||L.r.f-); [L.e]
	 ]
}

/*inline process cmerge1b2(a4pa1of2 A, a4pa1of2 B, a4pa1of2 S, a4pa1of2 O)
{
	dualrail s;
	dualrail o;
	*[
		S?s;
		[  s.f -> A?o
		[] s.t -> B?o
		];
		O!o
	]
}*/

inline process fifo0b(a4pa L, a4pa R)
{
	*[L?;R!]
}

inline process fifo1b(a4pa1of2 L, a4pa1of2 R)
{
	dualrail i;
	
	*[L?i;R!i]
}

/*inline process fifo2b(achan4p2b L, achan4p2b R)
{
	node<2> i;
	
	*[L?i;R!i]
}*/

inline process fork0b(a4pa L, a4pa R1, a4pa R2)
{
	*[L?;(R1!||R2!)]
}

/*inline process fork1b(a4pa1of2 L, a4pa1of2 R1, a4pa1of2 R2)
{
	dualrail val;
	
	*[L?val;(R1!val||R2!val)]
}*/

/*inline process fork2b(achan4p2b L, achan4p2b R1, achan4p2b R2)
{
	node<2> val;
	
	*[L?val;(R1!val||R2!val)]
}*/

/*inline process reg1b(p4pa1of2 R, a4pa1of2 W)
{
	node<1> val;

	*[
		[	#R -> R!val
		|	#W -> W?val
		]
	]
}

inline process reg2b(pchan4p2b R, achan4p2b W)
{
	node<2> val;

	*[
		[	#R -> R!val
		|	#W -> W?val
		]
	]
}

inline process merge0b2(a4pa L1, a4pa L2, a4pa R)
{
	*[
		[	#L1 -> L1?
		|	#L2 -> L2?
		]; R!
	]
}

inline process merge1b2(a4pa1of2 L1, a4pa1of2 L2, a4pa1of2 R)
{
	node<1> val;

	*[
		[	#L1 -> L1?val
		|	#L2 -> L2?val
		]; R!val
	]
}

inline process merge2b2(achan4p2b L1, achan4p2b L2, achan4p2b R)
{
	node<2> val;
	
	*[
		[	#L1 -> L1?val
		|	#L2 -> L2?val
		]; R!val
	]
}*/
