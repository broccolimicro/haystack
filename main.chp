#include "channel.chp"

/*inline process wchb(achan4p1b R, achan4p1b L)
{
	*[
		[	R.a & L.r.t -> R.r.t+
		[]	R.a & L.r.f -> R.r.f+
		]; L.a-; [~R.a & ~L.r.t & ~L.r.f]; (R.r.t-||R.r.f-); L.a+
	]
}

inline process pchb(achan4p1b R, achan4p1b L)
{
	*[
		[	R.a & L.r.t -> R.r.t+ 
		[]	R.a & L.r.f -> R.r.f+
		]; L.a-; [~R.a]; R.r.t-; R.r.f-; [~L.r.t & ~L.r.f]; L.a+
	]
}

inline process pcfb(achan4p1b R, achan4p1b L)
{
	//node<1> en;
	*[
		[	R.a & L.r.t -> R.r.t+ 
		[]	R.a & L.r.f -> R.r.f+
		]; L.a-;// en-;
		(
			([~R.a]; R.r.t-; R.r.f-) || 
			([~L.r.t & ~L.r.f]; L.a+)
		);// en+ 
	]
}

inline process cmerge1b2(achan4p1b A, achan4p1b B, achan4p1b S, achan4p1b O)
{
	node<1> s;
	node<1> o;
	*[
		S?s;
		[ ~s -> A?o
		[] s -> B?o
		];
		O!o
	]
}*/

/*inline process test_b(achan4p0b A, achan4p0b B, achan4p0b C) 
{
	node<3> val;

	val := 0;
	*[
  		[  val == 0 -> A?
		[] val == 1 -> B?
		[] val == 2 -> C?
		[] val == 3 -> C?
		[] val == 4 -> A?
		[] val == 5 -> B?
		[] val == 6 -> B?
		[] val == 7 -> A?
		]; 
		val := (val + 1)
	]
}*/

inline process fifo0b(achan4p0b L, achan4p0b R)
{
	*[L?;R!]
}

inline process fifo1b(achan4p1b L, achan4p1b R)
{
	node<1> i;
	
	*[L?i;R!i]
}

/*inline process fifo2b(achan4p2b L, achan4p2b R)
{
	node<2> i;
	
	*[L?i;R!i]
}

inline process fork0b(achan4p0b L, achan4p0b R1, achan4p0b R2)
{
	*[L?;(R1!||R2!)]
}

inline process fork1b(achan4p1b L, achan4p1b R1, achan4p1b R2)
{
	node<1> val;
	
	*[L?val;(R1!val||R2!val)]
}

inline process fork2b(achan4p2b L, achan4p2b R1, achan4p2b R2)
{
	node<2> val;
	
	*[L?val;(R1!val||R2!val)]
}*/

/*inline process reg1b(pchan4p1b R, achan4p1b W)
{
	node<1> val;

	*[
		[	#R -> R!val
		|	#W -> W?val
		]
	]
}

inline process reg2b(pchan4p2b R, achan4p2b W)
{
	node<2> val;

	*[
		[	#R -> R!val
		|	#W -> W?val
		]
	]
}

inline process merge0b2(achan4p0b L1, achan4p0b L2, achan4p0b R)
{
	*[
		[	#L1 -> L1?
		|	#L2 -> L2?
		]; R!
	]
}

inline process merge1b2(achan4p1b L1, achan4p1b L2, achan4p1b R)
{
	node<1> val;

	*[
		[	#L1 -> L1?val
		|	#L2 -> L2?val
		]; R!val
	]
}

inline process merge2b2(achan4p2b L1, achan4p2b L2, achan4p2b R)
{
	node<2> val;
	
	*[
		[	#L1 -> L1?val
		|	#L2 -> L2?val
		]; R!val
	]
}*/
