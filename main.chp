record chan4p0b
{
	int<1> r;
	int<1> a;
}

record chan4p1b
{
	int<1> ra;
	int<1> t;
	int<1> f;
}

process mux0b2(chan4p0b i, chan4p0b o1, chan4p0b o2, chan4p1b s)
{
	// initialize variables at reset
	i.a-;
	o1.r-;
	o2.r-;
	s.ra-;
	*[
		// wait for a request
		[s.t | s.f];
		// service the request
		[  s.f -> [i.r];o1.r+;[o1.a];i.a+;[~i.r];o1.r-;[~o1.a];i.a-
		[] s.t -> [i.r];o2.r+;[o2.a];i.a+;[~i.r];o2.r-;[~o2.a];i.a-
		];
		// clean up
		s.ra+;
		[~s.t & ~s.f];
		s.ra-;
	]
}

/*process fakemux0b2(chan4p0b i, chan4p0b o1, chan4p0b o2, chan4p1b s)
{
	// initialize variables at reset
	i.a-;
	o1.r-;
	o2.r-;
	s.ra-;
	*[
		// wait for a request
		[s.t | s.f];
		// service the request
		[  s.f -> [i.r];o1.r+;[o1.a];i.a+;[~i.r];o1.r-;[~o1.a];i.a-
		[] s.t -> [i.r];o2.r+;[o2.a];i.a+;[~i.r];o2.r-;[~o2.a];i.a-
		];
		// clean up
		s.ra+;
		[~s.t & ~s.f];
		s.ra-;
	]
}*/

process main()
{
	chan4p0b blarg;
	chan4p0b mrawr;
	chan4p0b yay;
	chan4p1b yeah;
	
	mux0b2 m(blarg, mrawr, yay, yeah);
}