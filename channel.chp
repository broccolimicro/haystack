#include "math.chp"

record dualrail
{
	node<1> t := 0;
	node<1> f := 0;
}

channel achan4p0b
{
	node<1> r := 0;
	node<1> a := 0;
	
	operator!()
	{
		r+; [a]; r-; [~a];
	}
	
	operator?()
	{
		[r]; a+; [~r]; a-;
	}
	
	operator#()
	{
		r
	}
}

channel achan4p1b
{
	dualrail r;
	node<1> a := 0;
	
	operator!(node<1> i)
	{
		require{~r.t | ~r.f};
		/*[	i  -> r.t,r.f := 1,0
		[]	~i -> r.t,r.f := 0,1
		];[a]; ((assume{a};r.t-)||(assume{a};r.f-)); [~a];*/
		
		 
		
		[	i	-> r.t+; [a]; r.t-;
		[]	~i	-> r.f+; [a]; r.f-;
		]; [~a];
	}
	
	operator?(node<1> i)
	{
		[ r.t&~r.f -> i+
		[]~r.t&r.f -> i-
		]; a+; [~r.t & ~r.f]; a-;
	}
	
	operator#()
	{
		r.t|r.f
	}
}

channel achan2p0b
{
	node<1> r := 0;
	node<1> a := 0;
	
	operator!(node<1> i)
	{
		[   r -> r-;[~a]
		[] ~r -> r+;[ a]
		]
	}
	
	operator?(node<1> i)
	{
		[   a -> [~r];a-
		[] ~a -> [ r];a+
		]
	}
	
	operator#()
	{
		r
	}
}